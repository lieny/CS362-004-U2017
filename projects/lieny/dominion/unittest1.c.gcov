        -:    0:Source:unittest1.c
        -:    0:Graph:unittest1.gcno
        -:    0:Data:unittest1.gcda
        -:    0:Runs:1
        -:    0:Programs:1
        -:    1:/*********************************************************************************************
        -:    2: * Author: Ya Lien
        -:    3: * Class: CS362 	Assignment: Assignment 3 - unittest1
        -:    4: * Description: unit test for the isGameOver function
        -:    5: * ******************************************************************************************/
        -:    6:#include <stdio.h>
        -:    7:#include "assert.h"
        -:    8:#include "dominion.h"
        -:    9:#include "rngs.h"
        -:   10:
        1:   11:int main(){
        -:   12:	struct gameState game;
        -:   13:	int result, i;
        -:   14:	//Default cards, as defined in playDom
        1:   15:	int kCard[10] = {adventurer, gardens, embargo, village, minion, mine, cutpurse, sea_hag, tribute, smithy};
        -:   16:
        -:   17:	
        -:   18:	//initialize the game with 2 players and the kingdom cards
        1:   19:	initializeGame(2, kCard, 1, &game);
        -:   20:	
        1:   21:	result = isGameOver(&game);
        1:   22:	assert(result == 0);	//test if game doesn't end in normal condition
        -:   23:
        -:   24:
        -:   25:	//test when Province card stack is empty
        1:   26:	printf("Test isGameOver with empty stack of Province cards\n");
        1:   27:	game.supplyCount[province] = 0;
        1:   28:	result = isGameOver(&game);
        -:   29:
        1:   30:	assert(result == 1);	//check if the result is correct
        -:   31:
        -:   32:	//test when three supply piles are at 0
        -:   33:
        4:   34:	for(i = 0; i < 3; i++)
        3:   35:		game.supplyCount[i] = 0;
        -:   36:
        1:   37:	result = isGameOver(&game);
        1:   38:	assert(result == 1);
        -:   39:
        4:   40:	for(i = 0; i < 3; i++)
        3:   41:		game.supplyCount[i] = 1;
        -:   42:
        4:   43:	for(i = 3; i < 6; i++)
        3:   44:		game.supplyCount[i] = 0;
        1:   45:	result = isGameOver(&game);
        1:   46:	assert(result == 1);
        -:   47:
        -:   48:
        1:   49:	printf("All test for isGameOver passed!\n");	
        -:   50:
        -:   51:
        1:   52:	return 0;
        -:   53:}
